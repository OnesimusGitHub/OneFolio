/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useEffect } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import * as THREE from 'three'
import { useMotionValue, useSpring } from 'framer-motion'
import { useFrame } from '@react-three/fiber'

export function SModel(props) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF(
    '/models/free_sci_fi_drone_full_pack_in_description.glb'
  )
  const { actions } = useAnimations(animations, group)
  
  // Play animations when component mounts
  useEffect(() => {
    // Play all available animations
    if (animations.length > 0) {
      Object.keys(actions).forEach(actionName => {
        actions[actionName]?.play()
      })
    }
    
    // Or play specific animation by name (if you know the name)
    // actions['AnimationName']?.play()
    
    // For propeller animations, you might want to loop them
    Object.keys(actions).forEach(actionName => {
      if (actions[actionName]) {
        actions[actionName].setLoop(THREE.LoopRepeat, Infinity)
        actions[actionName].play()
      }
    })
  }, [actions, animations])


  useEffect(() => {
    if (materials['01_-_Default']) {
      materials['01_-_Default'].metalness = 0.8
      materials['01_-_Default'].roughness = 0.2
      materials['01_-_Default'].envMapIntensity = 1.5
    }
  }, [materials])
  

  const yPosition = useMotionValue(-5);
  const ySpring = useSpring(yPosition, {damping: 100});
  useEffect(() => {
    ySpring.set(5);
  },[ySpring]);
  useFrame(() => {
    group.current.position.z = ySpring.get();
  });

  return (
    <group 
        ref={group} 
        {...props} 
        dispose={null}
        position={[5, -2, 4]} 
        rotation={[2, 2, -2]} 
    >
    <group ref={group} {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <group name="Sketchfab_model" rotation={[-Math.PI / 2, 0, 0]}>
          <group name="b89c6b0b48d34f11b84c2e043936fce3fbx" rotation={[Math.PI / 2, 0, 0]}>
            <group name="Object_2">
              <group name="RootNode">
                <group
                  name="Body"
                  position={[0.001, -0.002, -0.002]}
                  rotation={[-Math.PI / 2, 0, 0]}>
                  <mesh
                    name="Body_01_-_Default_0"
                    castShadow
                    receiveShadow
                    geometry={nodes['Body_01_-_Default_0'].geometry}
                    material={materials['01_-_Default']}
                  />
                </group>
                <group
                  name="FR_Propeller"
                  position={[-0.464, 0.043, 0.45]}
                  rotation={[-Math.PI / 2, 0, 0]}>
                  <mesh
                    name="FR_Propeller_01_-_Default_0"
                    castShadow
                    receiveShadow
                    geometry={nodes['FR_Propeller_01_-_Default_0'].geometry}
                    material={materials['01_-_Default']}
                  />
                </group>
                <group
                  name="Camera"
                  position={[-0.002, -0.252, 0.019]}
                  rotation={[-Math.PI / 2, 0, 0]}>
                  <mesh
                    name="Camera_01_-_Default_0"
                    castShadow
                    receiveShadow
                    geometry={nodes['Camera_01_-_Default_0'].geometry}
                    material={materials['01_-_Default']}
                  />
                </group>
                <group
                  name="FL_Propeller"
                  position={[0.466, 0.043, 0.45]}
                  rotation={[-Math.PI / 2, 0, 0]}>
                  <mesh
                    name="FL_Propeller_01_-_Default_0"
                    castShadow
                    receiveShadow
                    geometry={nodes['FL_Propeller_01_-_Default_0'].geometry}
                    material={materials['01_-_Default']}
                  />
                </group>
                <group
                  name="BL_Propeller"
                  position={[0.466, 0.043, -0.453]}
                  rotation={[-Math.PI / 2, 0, 0]}>
                  <mesh
                    name="BL_Propeller_01_-_Default_0"
                    castShadow
                    receiveShadow
                    geometry={nodes['BL_Propeller_01_-_Default_0'].geometry}
                    material={materials['01_-_Default']}
                  />
                </group>
                <group
                  name="BR_Propeller"
                  position={[-0.464, 0.043, -0.453]}
                  rotation={[-Math.PI / 2, 0, 0]}>
                  <mesh
                    name="BR_Propeller_01_-_Default_0"
                    castShadow
                    receiveShadow
                    geometry={nodes['BR_Propeller_01_-_Default_0'].geometry}
                    material={materials['01_-_Default']}
                  />
                </group>
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
    </group>
  )
}

useGLTF.preload('/models/free_sci_fi_drone_full_pack_in_description.glb')